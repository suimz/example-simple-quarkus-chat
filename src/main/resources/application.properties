# ?????fast-jar?uber-jar????jar??native?????????
quarkus.package.type=fast-jar
# ?????????????docker??????Linux?????
quarkus.native.container-build=true

quarkus.http.port=8080
quarkus.jackson.serialization-inclusion=non_null

# ???????
quarkus.datasource.db-kind=mysql
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/quarkus
quarkus.datasource.username=username
quarkus.datasource.password=password
# ?????????????????
quarkus.datasource.jdbc.min-size=2
# ?????????????
quarkus.datasource.jdbc.max-size=8
# JDBC????
quarkus.hibernate-orm.jdbc.timezone=Asia/Shanghai

# ??
quarkus.log.level=INFO
quarkus.log.file.enable=true
quarkus.log.file.async=true
quarkus.log.file.level=INFO
quarkus.log.file.path=/tmp/logs/app.log
# ????????????
quarkus.log.file.rotation.max-file-size=10M
# ?????????
quarkus.log.file.rotation.max-backup-index=5

# JWT ??
#######################################################################################################
# ? OpenSSL?? JWT ????? publicKey.pem ? privateKey.pem ??
# $ openssl genrsa -out rsaPrivateKey.pem 2048
# $ openssl rsa -pubout -in rsaPrivateKey.pem -out publicKey.pem
# $ openssl pkcs8 -topk8 -nocrypt -inform pem -in rsaPrivateKey.pem -outform pem -out privateKey.pem
#######################################################################################################
# ???
smallrye.jwt.sign.key.location=jwt/privateKey.pem
smallrye.jwt.new-token.issuer=https://example.com/issuer
smallrye.jwt.claims.sub=smz
# token??????????15?
smallrye.jwt.new-token.lifespan=1296000
# ???
mp.jwt.verify.publickey.location=jwt/publicKey.pem
mp.jwt.verify.issuer=${smallrye.jwt.new-token.issuer}
mp.jwt.verify.sub=${smallrye.jwt.claims.sub}
# native?????????????????
quarkus.native.resources.includes=${smallrye.jwt.sign.key.location}, ${mp.jwt.verify.publickey.location}

# OpenAI
quarkus.rest-client.openai-api.url=https://api.openai.com
# API Key - https://platform.openai.com/overview
quarkus.rest-client.openai-api.headers.Authorization=Bearer sk-xxx
quarkus.rest-client.openai-api.connect-timeout=60000
quarkus.rest-client.openai-api.verify-host=false
# ????
#quarkus.rest-client.openai-api.proxy-address=host:port
#quarkus.rest-client.openai-api.proxy-user=user
#quarkus.rest-client.openai-api.proxy-password=password
